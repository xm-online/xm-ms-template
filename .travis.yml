language: java
jdk:
- oraclejdk21
install: true
dist: jammy

script:
    - set -e
    - "./gradlew --no-daemon --refresh-dependencies clean check test"
    - "./gradlew -x test -Pprod --no-daemon bootWar"
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    # Додавання кроків Trivy
    - echo "Початок встановлення Trivy..."
    - sudo snap install trivy
    #- curl -sfL https://aquasecurity.github.io/trivy/install.sh | sh -s -- -b /usr/local/bin
    # Кінець кроків Trivy
    - export DOCKER_REPO=$(echo -n $TRAVIS_REPO_SLUG | sed -e 's/^xm-online\//xmonline\//g')
    - export IMAGE_BRANCH=$(echo -n $TRAVIS_BRANCH | sed -e 's/\//-/g')
    - export PROJECT_VERSION="$IMAGE_BRANCH"
    - export IMAGE_TO_SCAN="$DOCKER_REPO:$PROJECT_VERSION"
    - if [ "$TRAVIS_PULL_REQUEST" == "false" ];
      then
        PROJECT_VERSION=$(./gradlew -q  getProjectVersion);
        export SONAR_PK=$(echo -n $TRAVIS_REPO_SLUG | sed -e 's/\//:/g');
        TAGS="$PROJECT_VERSION $PROJECT_VERSION-$TRAVIS_BUILD_NUMBER $(echo $PROJECT_VERSION | awk -F '.' '{printf $1"."$2" "$1}') latest";
      fi
    - TAG_ARGS=""
    - for TAG in $TAGS;
      do
        TAG_ARGS="$TAG_ARGS -t $DOCKER_REPO:$TAG";
      done
    - if [ "$TAG_ARGS" ];
      then
        docker build -t app-docker-img --label commit_id="$TRAVIS_COMMIT" --label version="$PROJECT_VERSION" --label build_number="$TRAVIS_BUILD_NUMBER" --label build_url="$TRAVIS_BUILD_WEB_URL" --label git_url="$TRAVIS_REPO_SLUG" --label commit_message="$TRAVIS_COMMIT_MESSAGE" -f src/main/docker/Dockerfile .;
      fi
    - for TAG in $TAGS;
      do
        docker tag app-docker-img $DOCKER_REPO:$TAG;
        docker push $DOCKER_REPO:$TAG;
      done
    - echo "Trivy. Початок сканування Docker-образу..."
    - trivy image --severity CRITICAL,HIGH $IMAGE_TO_SCAN
    - echo "THE END TEST"

cache:
    directories:
        - "~/.gradle/"
        - "~/.m2"
env:
    global:
        - secure: NA6sUA8xwwHdtlGRV8jNonYmTF8uEiHCMNhzBTBuW4AajyZqB3ULT7mBADaosneO18Z/7eY0vN2drrDmTO156aVwmEPUlKqER5W1p0QEqRMvQ4VlR/fydQZ4ZkRWd/u78+q7tXLlGlaQkCUwroxEDno5UdnqMjnjmmqaBE02l5Ex1H9kHtPMScwgcwE5fqZcPTapVQOx2gHOkCP1DMVK3CD9peQqM9xUyBP26IZaJ9F3TN4fnJpOA+PD8v0QtLTqPUAP6/CgESwfL6KlZNxSvEVQnJO1auhv33qKmmFlk7DxL/ZsVq+o9lBdxbEWtz6tq2x44cI/QpTi3ZJ1I3CXZNhHTGIknojNLRLwIBa4MDXBCqsobYKTD6H64Q72g71Cdj+i3rXpVUWqFdrmSXIY+KLvTxw3iAgWNgccJcw67EpT9eBkfeQa6hVuZjmJM0fdeY6rnKBlZLQzGJ+RADYNMUX9aQJapt7J73x4OJYwAycL91Whk2j4oIi7mFxCVSh6svEQhLpRdnjhn0yhk8Nrmfcmr63g+6c95kPE4A8tj3CMBlbBlQ1MrHDn0ZaU/DE63dr7AAnr0ivGWGgUwiFOdfTvjG8bzs9MBdAOqSMOB9NiksCeZhXmYbOlkP1r0beVoNDgZ7jIi9/z8vhw+Ln1ubj48wodrk4v/HywoyntNgk=
        - secure: AOXfu4f+GzKoXcS6J0qzQ/xL9NtazJQRoIRXDEAYcJcY0nAzYcU6JmsjwmYrQoCVkR0ve69RnAezmnrCrddqIgyBf70cY2a+O3zsL5oZIaudD49twR8O3nINal+oB0/su4dXboRQgfrdfBqMRkWLx7GOpZ1KPXkbdpeIKSb8cP7B7bw/QkfgjO1dwDEhStDqTSpmrro+Ybw/QAgeQzQwxpEkAeHpVIj2+ENdeXK0ZWlVBXxMUu6oIowuoy7FaBTr91reVY2e2OSU80qzL4Z97wM0nYlbRgv4muCsKSTO1JpE5eS2d+Pj0TExDAc1uNtF79KrfNSspUQ4LzunDzrKyMiXQcrB8GWeX4l8P7kC2fyVLPOkxnhqhFaEKpyrECOH0fMsOY6xaPBXjhHIsGBeZ/RiUQ3TkwjN4/VVqQY9qn5T9TeXZEraSvWCl8El32W7D0HcDgOIhLGWbZ1LDD3xbOQZrgLhGbkMi7dWSnr0Zum8g1IOQHI8SMkSQ4M+x+Rmq4V2gdrZHt7/0L4SjS4rv9RRl3NnDhAneQSsrLipYCihlhmjNqvrC7QgvHX89LaT7fca/Boh5zF6VS0CLVK+Z65k850HLf1L+b+QF4HAadEmle8AXUr7KfNOzbSW1gkImWS+vXYSRVZhHjqDzJ/dzw2s9nTwaBWZ3R4OiM59McA=

branches:
    only:
        - master
        - main
